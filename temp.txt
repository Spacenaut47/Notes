public void DeleteCourse(int id)
{
    var course = _context.Courses
                         .Include(c => c.Students)
                         .FirstOrDefault(c => c.Id == id);

    if (course == null)
    {
        Console.WriteLine("Course not found.");
        return;
    }

    if (course.Students != null && course.Students.Count > 0)
    {
        Console.WriteLine("Cannot delete: Course has students assigned.");
        return;
    }

    _context.Courses.Remove(course);
    _context.SaveChanges();
}





public void AddStudent(string name, int courseId, int age)
{
    if (string.IsNullOrWhiteSpace(name) || age < 1 || age > 120)
    {
        Console.WriteLine("Invalid name or age.");
        return;
    }

    var courseExists = _context.Courses.Any(c => c.Id == courseId);
    if (!courseExists)
    {
        Console.WriteLine("Course ID does not exist.");
        return;
    }

    var student = new Student
    {
        Name = name,
        Age = age,
        CourseId = courseId
    };

    _context.Students.Add(student);
    _context.SaveChanges();
}




if (string.IsNullOrWhiteSpace(input)) { Console.WriteLine("Invalid input."); break; }
